name: Create Release Package

on:
  repository_dispatch:
    types: [create-release]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up environment
        run: |
          # Usar versi贸n del payload del dispatch
          VERSION="${{ github.event.client_payload.version }}"
          MESSAGE="${{ github.event.client_payload.message }}"
          DRAFT="${{ github.event.client_payload.draft }}"
          PRERELEASE="${{ github.event.client_payload.prerelease }}"
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV
          echo "DRAFT=$DRAFT" >> $GITHUB_ENV
          echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV
          
          echo "Building release for version: $VERSION"
          echo "Message: $MESSAGE"
          echo "Draft: $DRAFT"
          echo "Prerelease: $PRERELEASE"
      
      - name: Create release package
        run: |
          # Usar el script de configuraci贸n para crear el paquete
          chmod +x release-builder.sh
          
          # Crear directorio temporal
          mkdir -p "/tmp/bintools-release"
          
          # Procesar configuraci贸n y crear paquete
          PACKAGE_PATH=$(./release-builder.sh \
            --type user \
            --output "/tmp/bintools-release/bintools-${VERSION}" \
            --config configs/release-config.yml \
            --verbose)
          
          # Mover el paquete al directorio de trabajo
          mv "$PACKAGE_PATH" "bintools-${VERSION}.tar.gz"
          
          # Limpiar directorio temporal
          rm -rf "/tmp/bintools-release"
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.client_payload.version }}
          name: "bintools ${{ github.event.client_payload.version }}"
          body: ${{ github.event.client_payload.message }}
          files: bintools-${{ github.event.client_payload.version }}.tar.gz
          draft: ${{ github.event.client_payload.draft }}
          prerelease: ${{ github.event.client_payload.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update latest symlink
        run: |
          # Crear un symlink simb贸lico para 'latest'
          ln -sf "bintools-${VERSION}.tar.gz" "bintools-latest.tar.gz"
          
          # Subir el symlink como asset adicional
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @bintools-latest.tar.gz \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/latest/assets?name=bintools-latest.tar.gz"
